package com.example.accessingdatamysql;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping(path = "demo")
public class UserController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/add/user") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestBody User user) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        userRepository.save(user);
        return "User saved successfully";
    }

    @GetMapping(path="/all/users")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @PutMapping(path = "/update/user/{id}")
    public @ResponseBody String updateUser (@PathVariable Integer id,@RequestBody User updatedUser){
        User user = userRepository.findById(id).get();

        if(!updatedUser.getName().isEmpty()){
            user.setName(updatedUser.getName());
        }

        if(!updatedUser.getEmail().isEmpty()){
            user.setEmail(updatedUser.getEmail());
        }

        if(!updatedUser.getPassword().isEmpty()){
            user.setPassword(updatedUser.getPassword());
        }

        if(!updatedUser.getRole().isEmpty()){
            user.setRole(updatedUser.getRole());
        }

        userRepository.save(user);
        return "User updated successfully";

    }

    @DeleteMapping(path = "/delete/user/{id}")
    public @ResponseBody String deleteUser (@PathVariable Integer id){
        userRepository.deleteById(id);
        return "User deleted successfully";
    }


}
